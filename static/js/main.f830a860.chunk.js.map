{"version":3,"sources":["components/Buttons.tsx","config/getConfig.ts","assets/images/rif-id-manager.svg","app/Login/LoginScreenComponent.tsx","ethrpc.ts","features/rLogin.ts","app/state/reducers/identity.ts","app/state/reducers/ethrdid.ts","formatters.ts","features/resolverConfig.ts","app/state/operations/ethrdid.ts","app/state/reducers/tokens.ts","storage/localStorage.ts","app/state/operations/tokens.ts","app/Login/LoginScreenContainer.ts","app/state/operations/identity.ts","assets/images/rif-id-manager-gray.svg","components/NetworkStatus/NetworkStatus.tsx","components/Tooltip/Tooltip.tsx","components/Header/HeaderComponent.tsx","components/Navigation/Navigation.tsx","components/Panel/Panel.tsx","providerContext.tsx","components/Modal/Modal.tsx","components/EthrDid/DelegateComponent.tsx","components/EthrDid/OwnerComponent.tsx","app/Dashboard/panels/IdentityInformation.tsx","app/Dashboard/panels/Balance.tsx","app/Dashboard/DashboardScreen.tsx","app/Dashboard/DashboardContainer.ts","assets/images/powered-by-iov.svg","assets/images/powered-by-iov-gray.svg","components/RifFooter/RifFooter.tsx","app/App.tsx","reportWebVitals.ts","app/state/configureStore.ts","index.tsx"],"names":["SETTINGS","BaseButton","styled","button","LoginScreenComponent","handleLogin","className","src","logo","alt","onClick","href","target","rel","getNetwork","provider","Eth","net_version","getAccounts","accounts","getAccountAndNetwork","Promise","all","then","chainId","parseInt","getSetting","setting","Ethereum","Mainnet","Testnet","Local","Error","getDIDRegistryAddress","ETHR_DID_CONTRACT","getRPCUrl","RPC_URL","rLogin","RLogin","cachedProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","1","30","31","5777","supportedChains","identitySlice","createSlice","name","initialState","address","reducers","changeAccount","state","payload","changeChainId","actions","ethrDidSlice","didDocument","id","publicKey","authentication","resolveDid","data","displayIdentity","addr","slice","length","truncateAddressDid","value","lastIndexOf","lastIndex","resolverProviderConfig","networks","registry","rpcUrl","resolveDidDocument","dispatch","resolve","didResolver","Resolver","getResolver","did","includeEthr","createDidFormat","tokenInitialState","symbol","balance","tokensSlice","tokens","addTokenData","formattedPayload","toLowerCase","filter","item","push","map","LOCAL_STORAGE_KEY","getValueFromLocalStorage","key","settings","localStorage","getItem","JSON","parse","getTokenList","userAddress","TOKENS","getTokens","localTokens","concat","Array","isArray","getToken","onComplete","eth","token","EthContract","ethContract","erc20abi","at","getCode","result","catch","err","console","log","message","decimals","balanceOf","div","BN","pow","toNumber","addCustomToken","reject","response","json","setItem","stringify","saveToLocalStorage","toString","connect","context","setProvider","login","stateProps","dispatchProps","ownProps","NetworkStatusWrapper","span","NetworkLight","connected","chainIdToName","NetworkStatus","HoverSpan","HoverTrigger","ToolTip","hoverContent","children","Header","rifIdManager","Navigation","PanelWrapper","PanelHeader","PanelTitle","p","PanelRight","PanelContent","Panel","title","headerRight","Web3ProviderContext","React","createContext","Web3ProviderElement","useState","initialContext","Provider","ModalLightbox","show","ModalBody","ModalTitle","ModalCloseButton","ModalContent","Modal","onClose","DelegateComponent","delegates","addDelegate","isOwner","add","setAdd","isLoading","setIsLoading","newDelegate","setNewDelegate","isError","setIsError","useContext","resetState","delegate","indexOf","type","onChange","evt","placeholder","disabled","isValidAddress","isValidChecksumAddress","OwnerComponent","owner","changeOwner","edit","setEdit","newOwner","setNewOwner","IdentityInformationPanel","isAdvanced","setIsAdvanced","advancedToggle","needHover","original","rounded","parseFloat","toFixed","SingleToken","Balance","isAdding","setIsAdding","newAddress","setNewAddress","togglePopup","DashboardScreen","HeaderComponent","IdentityInformation","getOwnerFromDidDoc","controller","pk","endsWith","ethereumAddress","identity","ethrdid","EthrDID","setDidOwner","delegateType","userAddr","tokenAddr","DasboardScreen","RifFooter","isLoggedIn","version","poweredGray","powered","App","DashboardContainer","LoginScreenContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","middleware","thunk","createLogger","rootReducer","combineReducers","identityReducer","ethrdidReducer","tokenReducer","configureStore","prelodedState","createStore","applyMiddleware","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.f830a860.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const BaseButton = styled.button`\n  border-radius: 5px;\n  padding: 10px 50px;\n  font-size: 18px;\n  border: none;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n`\n","/* eslint-disable no-unused-vars */\nimport Ethereum from './config.ethereum.json'\nimport Mainnet from './config.mainnet.json'\nimport Testnet from './config.testnet.json'\nimport Local from './config.local.json'\n\nexport enum SETTINGS {\n  ETHR_DID_CONTRACT = 'ethrDid',\n  RPC_URL = 'rpcUrl',\n  TOKENS = 'tokens'\n}\n\nconst getSetting = (chainId: number, setting: SETTINGS) => {\n  switch (chainId) {\n    case 1: return Ethereum[setting]\n    case 30: return Mainnet[setting]\n    case 31: return Testnet[setting]\n    case 5777: return Local[setting]\n    default: throw new Error(`No setting for chainId ${chainId}`)\n  }\n}\n\nexport const getDIDRegistryAddress = (chainId: number) => getSetting(chainId, SETTINGS.ETHR_DID_CONTRACT)\nexport const getRPCUrl = (chainId: number) => getSetting(chainId, SETTINGS.RPC_URL)\nexport const getTokens = (chainId: number) => getSetting(chainId, SETTINGS.TOKENS)\n","export default __webpack_public_path__ + \"static/media/rif-id-manager.7afc1cbb.svg\";","import React from 'react'\nimport { BaseButton } from '../../components/Buttons'\nimport logo from '../../assets/images/rif-id-manager.svg'\n\ninterface LoginScreenInterface {\n  handleLogin: () => void\n}\n\nconst LoginScreenComponent: React.FC<LoginScreenInterface> = ({ handleLogin }) => {\n  return (\n    <div className=\"container login-screen\">\n      <div className=\"column\">\n        <img src={logo} alt=\"RIF identity Manager\" />\n        <h1>Sign in</h1>\n        <BaseButton className=\"blue\" onClick={handleLogin}>Connect your wallet</BaseButton>\n        <p>\n          {'Don\\'t have a wallet? '}\n          <a href=\"https://developers.rsk.co/wallet/use/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Download here\n          </a>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginScreenComponent\n","import Eth from 'ethjs-query'\n\nexport const getNetwork = (provider: any) => new Eth(provider).net_version()\nexport const getAccounts = (provider: any) => new Eth(provider).accounts()\n\nexport const getAccountAndNetwork = (provider: any) =>\n  Promise.all([\n    getAccounts(provider).then((accounts: string[]) => accounts[0]),\n    getNetwork(provider).then((chainId: string) => parseInt(chainId))\n  ])\n","import RLogin from '@rsksmart/rlogin'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport { getRPCUrl } from '../config/getConfig'\n\nexport const rLogin = new RLogin({\n  cachedProvider: false,\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      options: {\n        rpc: {\n          1: getRPCUrl(1),\n          30: getRPCUrl(30),\n          31: getRPCUrl(31),\n          5777: getRPCUrl(5777)\n        }\n      }\n    }\n  },\n  supportedChains: [1, 30, 31, 5777]\n})\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface IdentityState {\n  address: string\n  chainId: number | null\n}\n\ninterface ChangeAccountPayload {\n  address: string\n}\n\ninterface ChangeChainIdPayload {\n  chainId: number\n}\n\nexport const initialState: IdentityState = {\n  address: '',\n  chainId: null\n}\n\nconst identitySlice = createSlice({\n  name: 'identity',\n  initialState,\n  reducers: {\n    changeAccount (state: IdentityState, { payload: { address } }: PayloadAction<ChangeAccountPayload>) {\n      state.address = address\n    },\n    changeChainId (state: IdentityState, { payload: { chainId } }: PayloadAction<ChangeChainIdPayload>) {\n      state.chainId = chainId\n    }\n  }\n})\n\nexport const { changeAccount, changeChainId } = identitySlice.actions\n\nexport default identitySlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DIDDocument } from 'did-resolver'\n\nexport interface EtherdidState {\n  didDocument: DIDDocument\n}\n\ninterface ResolveDidPayload {\n  data: DIDDocument\n}\n\nexport const initialState: EtherdidState = {\n  didDocument: {\n    '@context': 'https://w3id.org/did/v1',\n    id: '',\n    publicKey: [],\n    authentication: []\n  }\n}\n\nconst ethrDidSlice = createSlice({\n  name: 'ethrdid',\n  initialState,\n  reducers: {\n    resolveDid (state: EtherdidState, { payload: { data } }: PayloadAction<ResolveDidPayload>) {\n      state.didDocument = data\n    }\n  }\n})\n\nexport const { resolveDid } = ethrDidSlice.actions\n\nexport default ethrDidSlice.reducer\n","/**\n * Creates address and truncates it\n * @param address address for the did\n * @param chainId chainId\n */\nexport const displayIdentity = (address: string, chainId?: number) => {\n  const addr = `${address.slice(0, 6)}...${address.slice(address.length - 4)}`\n  switch (chainId) {\n    case 1: return `did:eth:${addr}`\n    case 30: return `did:rsk:${addr}`\n    case 31: return `did:rsk:testnet:${addr}`\n    default: return addr\n  }\n}\n\n/**\n * Create Identity\n * @param address address for the did\n * @param chainId chainId\n * @param includeEthr include eth:, required for some did tools\n */\nexport const createDidFormat = (address: string, chainId: number, includeEthr?: boolean) => {\n  switch (chainId) {\n    case 1: return `did:${includeEthr ? 'ethr:' : ''}mainnet:${address}`\n    case 30: return `did:${includeEthr ? 'ethr:' : ''}rsk:${address}`\n    case 31: return `did:${includeEthr ? 'ethr:' : ''}rsk:testnet:${address}`\n    case 5777: return `did:${includeEthr ? 'ethr:' : ''}development:${address}`\n    default: return address\n  }\n}\n\n/**\n * Truncates a DID or an Address\n * @param value DID or Address to be truncated\n */\nexport const truncateAddressDid = (value: string) => {\n  if (value.lastIndexOf(':') === -1) {\n    return `${value.slice(0, 6)}...${value.slice(value.length - 4)}`\n  }\n\n  const lastIndex = value.lastIndexOf(':')\n  return `${value.slice(0, lastIndex)}${value.slice(lastIndex, lastIndex + 7)}...${value.slice(value.length - 4)}`\n}\n","import { getDIDRegistryAddress, getRPCUrl } from '../config/getConfig'\n\nexport const resolverProviderConfig = {\n  networks: [\n    { name: 'mainnet', registry: getDIDRegistryAddress(1), rpcUrl: getRPCUrl(1) },\n    { name: 'rsk', registry: getDIDRegistryAddress(30), rpcUrl: getRPCUrl(30) },\n    { name: 'rsk:testnet', registry: getDIDRegistryAddress(31), rpcUrl: getRPCUrl(31) },\n    { name: 'development', registry: getDIDRegistryAddress(5777), rpcUrl: getRPCUrl(5777) }\n  ]\n}\n","import { Dispatch } from 'react'\nimport EthrDID from '@rsksmart/ethr-did'\nimport { getAccountAndNetwork } from '../../../ethrpc'\nimport { resolveDid } from '../reducers/ethrdid'\nimport { getResolver } from 'ethr-did-resolver'\nimport { DIDDocument, Resolver } from 'did-resolver'\nimport { getDIDRegistryAddress } from '../../../config/getConfig'\nimport { createDidFormat } from '../../../formatters'\nimport { resolverProviderConfig } from '../../../features/resolverConfig'\n\nconst Secp256k1VerificationKey2018 = '0x73696741757468'\n\n/**\n * Set the owner in the DID Registry. Can only be set by the owner.\n * @param provider web3 provider\n * @param newOwner new owner of the DID\n */\nexport const setDidOwner = (provider: any, newOwner: string) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .changeOwner(newOwner.toLowerCase())\n        .then(() => resolve(dispatch(resolveDidDocument(provider))))\n        .catch((err: Error) => reject(err))\n    )\n  })\n\n/**\n * Resolve an address. Returns a DIDDocument\n * @param provider web3 provider\n */\nexport const resolveDidDocument = (provider: any) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve) => {\n    getAccountAndNetwork(provider).then(([address, chainId]) => {\n      const didResolver = new Resolver(getResolver(resolverProviderConfig))\n\n      const did = createDidFormat(address, chainId, true)\n      didResolver.resolve(did).then((data: DIDDocument) => resolve(dispatch(resolveDid({ data }))))\n    })\n  })\n\nexport const addDelegate = (provider: any, delegate: string) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .addDelegate(delegate, {\n          delegateType: Secp256k1VerificationKey2018\n        })\n        .then((response: any) => {\n          dispatch(resolveDidDocument(provider))\n          resolve(response)\n        })\n        .catch((err: Error) => reject(err))\n    )\n  })\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface Token {\n  address: string,\n  name?: string | null,\n  symbol?: string | null,\n  balance?: number | null\n}\n\nexport const tokenInitialState: Token = {\n  address: '',\n  name: null,\n  symbol: null,\n  balance: 0\n}\n\nexport interface TokenState {\n  tokens: Token[]\n}\n\nexport const initialState = {\n  tokens: []\n}\n\ninterface addTokenDataPayload {\n  data: Token\n}\n\nconst tokensSlice = createSlice({\n  name: 'tokens',\n  initialState,\n  reducers: {\n    addTokenData (state: TokenState, { payload: { data } }: PayloadAction<addTokenDataPayload>) {\n      const formattedPayload = { ...data, address: data.address.toLowerCase() }\n      if (state.tokens.filter((item: Token) => item.address === formattedPayload.address).length === 0) {\n        state.tokens.push({ ...tokenInitialState, ...formattedPayload })\n      } else {\n        state.tokens = state.tokens.map((item: Token) =>\n          (item.address === formattedPayload.address) ? { ...item, ...formattedPayload } : item)\n      }\n    }\n  }\n})\n\nexport const { addTokenData } = tokensSlice.actions\n\nexport default tokensSlice.reducer\n","const LOCAL_STORAGE_KEY = 'id-manager-settings'\n\nexport const saveToLocalStorage = (chainId: string, key: string, value: string) => {\n  const settings = localStorage.getItem(`${LOCAL_STORAGE_KEY}-${chainId}`)\n\n  const json = settings ? JSON.parse(settings) : {}\n  if (!json[key]) {\n    json[key] = []\n  }\n  json[key].push(value)\n\n  localStorage.setItem(`${LOCAL_STORAGE_KEY}-${chainId}`, JSON.stringify(json))\n}\n\nexport const getValueFromLocalStorage = (chainId: string, key: string) => {\n  const settings = localStorage.getItem(`${LOCAL_STORAGE_KEY}-${chainId}`)\n  if (!settings) { return null }\n\n  const json = JSON.parse(settings)\n  return json[key] || null\n}\n","import { Dispatch } from 'react'\nimport Eth from 'ethjs-query'\nimport EthContract from 'ethjs-contract'\nimport BN from 'bn.js'\nimport erc20abi from './erc20.json'\nimport { addTokenData } from '../reducers/tokens'\nimport { getTokens } from '../../../config/getConfig'\nimport { saveToLocalStorage, getValueFromLocalStorage } from '../../../storage/localStorage'\n\nexport const getTokenList = (provider: any, chainId: string, userAddress: string) => (dispatch: Dispatch<any>) => {\n  const tokens = getTokens(parseInt(chainId))\n  const localTokens = getValueFromLocalStorage(chainId, 'TOKEN') ? getValueFromLocalStorage(chainId, 'TOKEN') : []\n\n  const all = tokens.concat(localTokens)\n  Array.isArray(all) && all.map((address: string) => {\n    dispatch(getToken(provider, address, userAddress))\n  })\n}\n\nexport const getToken = (provider: any, address: string, userAddress: string, onComplete?: any) => (dispatch: Dispatch<any>) => {\n  const eth = new Eth(provider)\n  const ethContract = new EthContract(eth)\n  const token = ethContract(erc20abi).at(address)\n\n  eth.getCode(address).then((result: string) => {\n    if (result === '0x0') {\n      return onComplete && onComplete(new Error('The address is not a contract'))\n    }\n\n    token.symbol().then((symbol: string[]) => symbol[0])\n      .then((symbol: string) => dispatch(addTokenData({ data: { address, symbol } })))\n      .catch((err: Error) => console.log('symbol', err.message))\n\n    token.name().then((name: string) => name[0])\n      .then((name: string) => dispatch(addTokenData({ data: { address, name } })))\n      .catch((err: Error) => console.log('name', err.message))\n\n    token.decimals().then((decimals: BN[]) => decimals[0])\n      .then((decimals: BN) => {\n        token.balanceOf(userAddress)\n          .then((balance: BN[]) => balance[0])\n          .then((balance: BN) => balance.div(new BN(10).pow(decimals)).toNumber())\n          .then((balance: number) => {\n            balance !== 0 && dispatch(addTokenData({ data: { address, balance } }))\n            onComplete && onComplete(true)\n          })\n          .catch((err: Error) => console.log('balanceOf error', err))\n      })\n      .catch(() => onComplete && onComplete(new Error('The address is a contract but not ERC20 or ERC721 token.')))\n  })\n}\n\nexport const addCustomToken = (provider: any, userAddress: string, address: string, chainId: number) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const onComplete = (response: any) =>\n      response instanceof Error\n        ? reject(response)\n        : resolve(saveToLocalStorage(chainId.toString(), 'TOKEN', address))\n\n    dispatch(getToken(provider, address, userAddress, onComplete))\n  })\n","import { connect } from 'react-redux'\nimport LoginScreenComponent from './LoginScreenComponent'\nimport { login } from '../state/operations/identity'\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  handleLogin: (context: any) => dispatch(login(context))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps,\n  handleLogin: () => dispatchProps.handleLogin(ownProps.context)\n})\n\nexport default connect(null, mapDispatchToProps, mergeProps)(LoginScreenComponent)\n","import { Dispatch } from 'react'\nimport { getAccountAndNetwork } from '../../../ethrpc'\nimport { rLogin } from '../../../features/rLogin'\n\nimport { changeAccount, changeChainId } from '../reducers/identity'\nimport { resolveDidDocument } from './ethrdid'\nimport { getTokenList } from './tokens'\n\n/**\n * Login into web3 provider via rLogin\n * Saves the web3 provider into context and saves address and chainId to redux\n * @param context the app context where the provider will be ser\n */\nexport const login = (context: any) => (dispatch: Dispatch<any>) =>\n  rLogin.connect().then((provider: any) => {\n    context.setProvider(provider)\n\n    getAccountAndNetwork(provider).then(([address, chainId]) => {\n      dispatch(changeAccount({ address }))\n      dispatch(changeChainId({ chainId: parseInt(chainId) }))\n\n      dispatch(resolveDidDocument(provider))\n      dispatch(getTokenList(provider, chainId, address))\n    })\n  })\n    .catch((err: string) => console.log('rLogin Error', err))\n","export default __webpack_public_path__ + \"static/media/rif-id-manager-gray.d70174d8.svg\";","import React from 'react'\nimport styled from 'styled-components'\n\nconst NetworkStatusWrapper = styled.span`\n  display: inline-block;\n  border: 1px solid #fff;\n  border-radius: 25px;\n  padding:6px 18px !important;\n  color: #6C6B6C;\n  opacity: 1 !important;\n  border: 1px solid #CCCACD;\n  width: auto;\n`\n\n// eslint-disable-next-line no-undef\nconst NetworkLight = styled.div<{connected: boolean}>`\n  position: relative;\n  margin-left: 8px;\n  padding-left: 3px;\n  &:before {\n    position: absolute;\n    right: 98%;\n    top: 45%;\n    transform: translate(-5px, -50%);\n    content: \"\";\n    display: block;\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background: ${({ connected }) => (connected ? '#40d512' : '#DC3545')};\n  }\n`\n\nexport interface NetworkStatusInterface {\n  connected: boolean;\n  name?: string;\n  chainId?: number;\n}\n\nexport const chainIdToName = (chainId: number) => {\n  switch (chainId) {\n    case 1: return 'Ethereum'\n    case 30: return 'RSK Mainnet'\n    case 31: return 'RSK Testnet'\n    default: return `Network Id ${chainId.toString()}`\n  }\n}\n\nconst NetworkStatus: React.FC<NetworkStatusInterface> = ({ connected, name, chainId }) => {\n  return (\n    <NetworkStatusWrapper className={connected ? 'connected' : 'disconnected'}>\n      <NetworkLight connected={connected}>\n        {chainId ? chainIdToName(chainId) : name}\n      </NetworkLight>\n    </NetworkStatusWrapper>\n  )\n}\n\nexport default NetworkStatus\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\ninterface TooltipInterface {\n  children: ReactNode\n  hoverContent: string | ReactNode\n}\n\nconst HoverSpan = styled.span`\n  visibility: hidden;\n  position: absolute;\n  background-color: #555;\n  color: #fff;\n  text-align: center;\n  padding: 5px 10px;\n  border-radius: 6px;\n  z-index: 1;\n  opacity: 0;\n  transition: opacity .6s;\n  max-width: 250px;\n  word-break: break-all;\n`\n\nconst HoverTrigger = styled.span`\n  position: relative;\n  display: inline-block;\n  cursor: help;\n  margin-right: 20px;\n  &:hover + ${HoverSpan} {\n    visibility: visible;\n    opacity: 1;\n  }\n`\n\nconst ToolTip: React.FC<TooltipInterface> = ({ hoverContent, children }) => (\n  <>\n    <HoverTrigger>{children}</HoverTrigger>\n    <HoverSpan className=\"hover-content\">{hoverContent}</HoverSpan>\n  </>\n)\n\nexport default ToolTip\n","import React from 'react'\nimport rifIdManager from '../../assets/images/rif-id-manager-gray.svg'\nimport NetworkStatus from '../NetworkStatus/NetworkStatus'\nimport ToolTip from '../Tooltip/Tooltip'\nimport { truncateAddressDid } from '../../formatters'\n\ninterface HeaderComponentInterface {\n  did: string | null\n  chainId?: number | null\n}\n\nconst Header: React.FC<HeaderComponentInterface> = ({ did, chainId }) => (\n  <header className=\"container\">\n    <div className=\"column branding\">\n      <div className=\"logo\">\n        <img src={rifIdManager} alt=\"RIF Id Manager\" />\n      </div>\n      {did && (\n        <h1 className=\"persona\">\n          <ToolTip hoverContent={did}>{truncateAddressDid(did)}</ToolTip>\n        </h1>\n      )}\n    </div>\n    <div className=\"column network\">\n      {chainId && <NetworkStatus connected chainId={chainId} />}\n    </div>\n  </header>\n)\n\nexport default Header\n","import React from 'react'\n\nconst Navigation = () => (\n  <div className=\"container\">\n    <div className=\"column\">\n      <ul className=\"navigation\">\n        <li className=\"active\">Dashboard</li>\n        <li>Data Vault</li>\n        <li>Request Credentials</li>\n        <li>My Dapps</li>\n      </ul>\n    </div>\n  </div>\n)\n\nexport default Navigation\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\nconst PanelWrapper = styled.div`\n  background: #FFFFFF;\n  box-shadow: 0px 4px 20px rgba(145, 145, 145, 0.1);\n  border-radius: 20px;\n  padding: 10px 0;\n`\nconst PanelHeader = styled.div`\n  padding: 10px 25px 10px 25px;\n  border-bottom: 1px solid #F2F2F2;\n  margin: 0 0 15px 0;\n`\n\nconst PanelTitle = styled.p`\n  display: inline-block;\n  font-weight: 600 !important;\n  font-size: 16px;\n  line-height: 19px;\n  color: #50555c;\n  margin: 0;\n  padding: 0;\n`\n\nconst PanelRight = styled.div`\n  float: right;\n`\n\nconst PanelContent = styled.div`\n  padding: 25px 50px;\n`\n\ninterface PanelInterface {\n  title?: string | ReactNode\n  className?: string\n  headerRight?: string | ReactNode\n  children: ReactNode\n}\n\nconst Panel: React.FC<PanelInterface> = ({ title, headerRight, children, className }) => (\n  <PanelWrapper className={`panel ${className}`}>\n    {title && (\n      <PanelHeader className=\"panel-header\">\n        <PanelTitle className=\"panel-title\">{title}</PanelTitle>\n        {headerRight && <PanelRight className=\"panel-right\">{headerRight}</PanelRight>}\n      </PanelHeader>\n    )}\n    <PanelContent className=\"panel-content\">\n      {children}\n    </PanelContent>\n  </PanelWrapper>\n)\n\nexport default Panel\n","import React, { useState } from 'react'\n\nexport interface Web3ProviderContextInterface {\n  provider: any | null,\n  setProvider: (value: any) => void,\n}\n\nexport const Web3ProviderContext = React.createContext<Web3ProviderContextInterface | null>(null)\n\ninterface Web3ProviderElementInterface {\n  children: React.ReactNode,\n}\n\nexport const Web3ProviderElement: React.FC<Web3ProviderElementInterface> = ({ children }) => {\n  const [provider, setProvider] = useState<any | null>(null)\n  const initialContext: Web3ProviderContextInterface = {\n    provider: provider,\n    setProvider: (provider: any) => setProvider(provider)\n  }\n\n  return (\n    <Web3ProviderContext.Provider value={initialContext}>\n      {children}\n    </Web3ProviderContext.Provider>\n  )\n}\n","/* eslint-disable no-unused-vars */\nimport React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\ninterface ModalLightboxProps {\n  show: boolean;\n}\n\n// eslint-disable-next-line no-undef\nexport const ModalLightbox = styled.div<ModalLightboxProps>`\nfont-family: Rubik;\ntransition: opacity 0.1s ease-in-out;\ntext-align: center;\nposition: fixed;\nwidth: 100vw;\nheight: 100vh;\nmargin-left: -50vw;\ntop: 0;\nleft: 50%;\nz-index: 2;\nwill-change: opacity;\nbackground-color: rgba(0, 0, 0, 0.4);\nopacity: 1;\nvisibility: ${({ show }) => (show ? 'visible' : 'hidden')};\npointer-events: ${({ show }) => (show ? 'auto' : 'none')};\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n\n& * {\n  box-sizing: border-box !important;\n}\n`\n\nconst ModalBody = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 500px;\n  background: #ffffff;\n  border-radius: 20px;\n  overflow: hidden;\n`\n\nconst ModalTitle = styled.div`\n  background: #F2F2F2;\n  font-size: 16px;\n  padding: 15px 0\n`\n\nconst ModalCloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 10px;\n  color: #C4C4C4;\n  font-size: 2em;\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-weight: 300;\n  &:after {\n    content: '\\\\d7';\n  }\n`\n\nconst ModalContent = styled.div`\n  background: #ffffff;\n  padding: 0 20px 15px 20px;\n`\n\ninterface PanelInterface {\n  children: ReactNode\n  show: boolean\n  title?: string\n  onClose: () => void\n}\n\nconst Modal: React.FC<PanelInterface> = ({ children, show, title, onClose }) => (\n  show\n    ? (\n      <ModalLightbox show={show}>\n        <ModalBody>\n          <ModalTitle>\n            {title}\n            <ModalCloseButton onClick={onClose} />\n          </ModalTitle>\n          <ModalContent className=\"modal-content\">\n            {children}\n          </ModalContent>\n        </ModalBody>\n      </ModalLightbox>\n    )\n    : <></>\n)\n\nexport default Modal\n","import React, { useContext, useState } from 'react'\nimport { Authentication } from 'did-resolver'\nimport { Web3ProviderContext } from '../../providerContext'\nimport { BaseButton } from '../Buttons'\nimport { isValidAddress, isValidChecksumAddress } from 'rskjs-util'\nimport Modal from '../Modal/Modal'\nimport { truncateAddressDid } from '../../formatters'\nimport ToolTip from '../Tooltip/Tooltip'\n\ninterface DelegateComponentInterface {\n  delegates?: Authentication[] | null\n  chainId?: number | null\n  addDelegate: (provider: any, delegate: string) => any\n  isOwner: boolean\n}\n\nconst DelegateComponent: React.FC<DelegateComponentInterface> = ({ delegates, chainId, addDelegate, isOwner }) => {\n  const [add, setAdd] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [newDelegate, setNewDelegate] = useState<string>('')\n  const [isError, setIsError] = useState<null | string>(null)\n  const context = useContext(Web3ProviderContext)\n\n  const resetState = () => {\n    setIsError(null)\n    setIsLoading(false)\n  }\n\n  const handleAddDelegate = () => {\n    resetState()\n\n    if (!isValidAddress(newDelegate)) {\n      resetState()\n      return setIsError('Invalid Address')\n    }\n\n    if (newDelegate !== newDelegate.toLowerCase() && !isValidChecksumAddress(newDelegate, chainId)) {\n      resetState()\n      return setIsError('Checksum is incorrect.')\n    }\n\n    if (delegates?.filter(item => item.publicKey.indexOf(newDelegate) !== -1).length !== 0) {\n      resetState()\n      return setIsError('This address is already a delegate.')\n    }\n\n    setIsLoading(true)\n    addDelegate(context?.provider, newDelegate)\n      .then(() => {\n        setAdd(false)\n        setNewDelegate('')\n        resetState()\n      })\n      .catch((err: Error) => {\n        resetState()\n        setIsError(err.message)\n      })\n  }\n\n  const handleClose = () => {\n    if (!isLoading) {\n      setAdd(false)\n      resetState()\n    }\n  }\n\n  return (\n    <div className=\"column\">\n      <h2>Controllers</h2>\n      <ul className=\"value\">\n        {delegates?.map((delegate: Authentication) =>\n          <li key={delegate.publicKey}>\n            <ToolTip hoverContent={delegate.publicKey}>\n              {truncateAddressDid(delegate.publicKey.slice(delegate.publicKey.lastIndexOf(':') + 1, delegate.publicKey.indexOf('#')))}\n            </ToolTip>\n          </li>)\n        }\n      </ul>\n\n      {isOwner && <BaseButton onClick={() => setAdd(true)}>Add Delegate</BaseButton>}\n      <Modal show={add} title=\"Delegate Identity\" onClose={handleClose}>\n        <div className=\"delegate-identity\">\n          <p>Controllers can manage the identity but they are not the owners. Only the owners can transfer identities.</p>\n          <p>\n            <strong>Delegate to: </strong>\n            <input\n              type=\"text\"\n              value={newDelegate}\n              onChange={evt => setNewDelegate(evt.target.value)}\n              placeholder=\"address\"\n              className=\"line\"\n              disabled={isLoading}\n            />\n          </p>\n          <BaseButton className=\"blue\" disabled={isLoading} onClick={handleAddDelegate}>Add controller</BaseButton>\n          {isError && <p>{isError}</p>}\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\nexport default DelegateComponent\n","import React, { useContext, useState } from 'react'\nimport { truncateAddressDid } from '../../formatters'\nimport { Web3ProviderContext } from '../../providerContext'\nimport { BaseButton } from '../Buttons'\nimport { isValidAddress, isValidChecksumAddress } from 'rskjs-util'\nimport Modal from '../Modal/Modal'\nimport ToolTip from '../Tooltip/Tooltip'\n\ninterface OwnerComponentInterface {\n  owner?: string | null\n  isOwner: boolean\n  chainId?: number | null\n  changeOwner: (provider: any, newOwner: string) => any\n}\n\nconst OwnerComponent: React.FC<OwnerComponentInterface> = ({ owner, isOwner, chainId, changeOwner }) => {\n  const [edit, setEdit] = useState<boolean>(false)\n  const [newOwner, setNewOwner] = useState<string>('')\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n  const context = useContext(Web3ProviderContext)\n\n  const resetState = () => {\n    setIsError(null)\n    setIsLoading(false)\n  }\n\n  const handleSetOwner = () => {\n    resetState()\n\n    if (!isValidAddress(newOwner)) {\n      resetState()\n      return setIsError('Invalid Address')\n    }\n\n    if (newOwner !== newOwner.toLowerCase() && !isValidChecksumAddress(newOwner, chainId)) {\n      resetState()\n      return setIsError('Checksum is incorrect.')\n    }\n    setIsLoading(true)\n    changeOwner(context?.provider, newOwner)\n      .then(() => {\n        setEdit(false)\n        setNewOwner('')\n        resetState()\n      })\n      .catch((err: Error) => {\n        resetState()\n        setIsError(err.message)\n      })\n  }\n\n  const handleClose = () => {\n    if (!isLoading) {\n      setEdit(false)\n      resetState()\n    }\n  }\n\n  return (\n    <div className=\"column\">\n      <h2>Owner</h2>\n      <p className=\"value\">\n        {owner && <ToolTip hoverContent={owner}>{truncateAddressDid(owner)}</ToolTip>}\n      </p>\n\n      {isOwner && <BaseButton onClick={() => setEdit(!edit)}>Change Owner</BaseButton>}\n\n      <Modal show={edit} title=\"Transfer Identity\" onClose={handleClose}>\n        <div className=\"change-owner\">\n          <p>Be aware that once you transfer the identity, you will lose ownership and can no longer manage the identity.</p>\n          <p>\n            <strong>Transfer to: </strong>\n            <input\n              type=\"text\"\n              value={newOwner}\n              onChange={evt => setNewOwner(evt.target.value)}\n              placeholder=\"address\"\n              className=\"line\"\n              disabled={isLoading}\n            />\n          </p>\n          <BaseButton className=\"blue\" disabled={isLoading} onClick={handleSetOwner}>Transfer</BaseButton>\n          {isError && <p>{isError}</p>}\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\nexport default OwnerComponent\n","import { Authentication } from 'did-resolver'\nimport React, { useState } from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { displayIdentity } from '../../../formatters'\nimport DelegateComponent from '../../../components/EthrDid/DelegateComponent'\nimport OwnerComponent from '../../../components/EthrDid/OwnerComponent'\n\ninterface IdentityInformationPanelI {\n  address?: string | null\n  chainId?: number | null\n  owner?: string | null\n  delegates?: Authentication[]\n  changeOwner: (provider: any, newOwner: string) => any\n  addDelegate: (provider: any, delegateAddr: string) => any\n}\n\nconst IdentityInformationPanel: React.FC<IdentityInformationPanelI> = ({ address, chainId, owner, delegates, changeOwner, addDelegate }) => {\n  const [isAdvanced, setIsAdvanced] = useState<boolean>(false)\n  const advancedToggle = <button className=\"advancedToggle\" onClick={() => setIsAdvanced(!isAdvanced)}>{isAdvanced ? 'Basic' : 'Advanced'}</button>\n  const isOwner = address?.toLowerCase() === owner?.toLowerCase()\n  if (!address || !chainId) return <></>\n\n  return (\n    <div className=\"container\">\n      <div className=\"column\">\n        <Panel\n          title=\"Identity information\"\n          className=\"identity-information\"\n          headerRight={advancedToggle}\n        >\n          <div className=\"container\">\n            <div className=\"column\">\n              <h2>Identity Address</h2>\n              <p className=\"value\">\n                <ToolTip hoverContent={address}>{displayIdentity(address, chainId)}</ToolTip>\n              </p>\n            </div>\n            {isAdvanced && (\n              <>\n                {owner && <OwnerComponent isOwner={isOwner} owner={owner} changeOwner={changeOwner} />}\n                {delegates && <DelegateComponent isOwner={isOwner} delegates={delegates} addDelegate={addDelegate} />}\n              </>\n            )}\n          </div>\n        </Panel>\n      </div>\n    </div>\n  )\n}\n\nexport default IdentityInformationPanel\n","import React, { useContext, useState } from 'react'\nimport { BaseButton } from '../../../components/Buttons'\nimport Modal from '../../../components/Modal/Modal'\nimport Panel from '../../../components/Panel/Panel'\nimport { Web3ProviderContext } from '../../../providerContext'\nimport { Token } from '../../state/reducers/tokens'\nimport { isValidAddress } from 'rskjs-util'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { truncateAddressDid } from '../../../formatters'\n\ninterface BalanceInterface {\n  tokens?: Token[]\n  addCustomToken: (provider: any, tokenAddress: string) => any\n}\n\nconst needHover = (original: number | null | undefined) => {\n  if (!original) { return original }\n  const rounded = parseFloat(original.toFixed(8))\n  return rounded === original ? original : <ToolTip hoverContent={original}>{rounded}</ToolTip>\n}\n\nconst SingleToken: React.FC<{ token: Token, key: any }> = ({ token }) => (\n  <div className=\"token\">\n    <div className=\"heading-symbol\">\n      {token.name || `Custom token: ${truncateAddressDid(token.address)}`}</div>\n    <div>\n      <span className=\"balance\">{needHover(token.balance)}</span>\n      <span className=\"symbol\">{token.symbol}</span>\n    </div>\n  </div>\n)\n\nconst Balance: React.FC<BalanceInterface> = ({ tokens, addCustomToken }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [newAddress, setNewAddress] = useState<string>('')\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const context = useContext(Web3ProviderContext)\n\n  const togglePopup = () => {\n    setIsAdding(!isAdding)\n    setNewAddress('')\n  }\n\n  const addToken = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (!isValidAddress(newAddress)) {\n      setIsLoading(false)\n      return setIsError('Not a valid address!')\n    }\n    addCustomToken(context?.provider, newAddress)\n      .then(() => {\n        setIsLoading(false)\n        setIsAdding(false)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  return (\n    <Panel\n      title=\"Identity Balance\"\n      className=\"identity-balance\"\n      headerRight={<button onClick={togglePopup} className=\"circle-plus\">+</button>}\n    >\n      {tokens?.map((token: Token) => <SingleToken key={token.address} token={token} />)}\n\n      <Modal show={isAdding} title=\"Add token\" onClose={togglePopup}>\n        <p>Add an ERC20 or ERC721 token to the dashboard.</p>\n        <p>\n          <strong>Token to Add:</strong>\n          <input\n            type=\"text\"\n            value={newAddress}\n            onChange={evt => setNewAddress(evt.target.value)}\n            placeholder=\"contract address\"\n            className=\"line\"\n            disabled={isLoading}\n          />\n        </p>\n        <BaseButton\n          onClick={addToken}\n          className=\"blue\"\n          disabled={isLoading}\n        >Add Token</BaseButton>\n        {isError && <p>{isError}</p>}\n      </Modal>\n    </Panel>\n  )\n}\n\nexport default Balance\n","import React from 'react'\nimport HeaderComponent from '../../components/Header/HeaderComponent'\nimport Navigation from '../../components/Navigation/Navigation'\nimport IdentityInformationComponent from './panels/IdentityInformation'\nimport { Authentication } from 'did-resolver'\nimport Balance from './panels/Balance'\nimport { Token } from '../state/reducers/tokens'\n\ninterface DashboardScreenInterface {\n  chainId?: number | null\n  address: string | null\n  owner?: string | null\n  delegates?: Authentication[]\n  tokens?: Token[]\n  changeOwner: (provider: any, newOwner: string) => any\n  addDelegate: (provider: any, delegateAddr: string) => any\n  addCustomToken: (provider: any, tokenAddr: string) => any\n}\n\nconst DashboardScreen: React.FC<DashboardScreenInterface> = ({\n  chainId, address, owner, delegates, tokens, changeOwner, addDelegate, addCustomToken\n}) => {\n  return (\n    <>\n      <HeaderComponent chainId={chainId} did={address} />\n      <div className=\"content dashboard\">\n        <Navigation />\n        <IdentityInformationComponent\n          address={address}\n          chainId={chainId}\n          owner={owner}\n          delegates={delegates}\n          changeOwner={changeOwner}\n          addDelegate={addDelegate}\n        />\n        <div className=\"container\">\n          <div className=\"column\">\n            <Balance tokens={tokens} addCustomToken={addCustomToken} />\n          </div>\n          <div className=\"column\">&nbsp;</div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default DashboardScreen\n","import { connect } from 'react-redux'\nimport { Authentication, DIDDocument, PublicKey } from 'did-resolver'\nimport { stateInterface } from '../state/configureStore'\nimport DasboardScreen from './DashboardScreen'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\nimport { setDidOwner, addDelegate } from '../state/operations/ethrdid'\nimport { addCustomToken } from '../state/operations/tokens'\n\nconst getOwnerFromDidDoc = (didDocument: DIDDocument) => {\n  const controller = didDocument.publicKey.filter((pk: PublicKey) => pk.id.endsWith('#controller'))[0]\n  return (typeof controller === 'undefined') ? null : controller.ethereumAddress\n}\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId,\n  tokens: state.tokens.tokens,\n  owner: getOwnerFromDidDoc(state.ethrdid.didDocument),\n  delegates: state.ethrdid.didDocument.authentication?.filter((pk: Authentication) => !pk.publicKey.endsWith('controller'))\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  changeOwner: (provider: any, newOwner: string) => dispatch(setDidOwner(provider, newOwner)),\n  addDelegate: (provider: any, newDelegate: string) => dispatch(addDelegate(provider, newDelegate)),\n  addCustomToken: (provider: any, userAddr: string, tokenAddr: string, chainId: number) => dispatch(addCustomToken(provider, userAddr, tokenAddr, chainId))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps,\n  addCustomToken: (provider: any, tokenAddr: string) => dispatchProps.addCustomToken(provider, stateProps.address, tokenAddr, stateProps.chainId)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(DasboardScreen)\n","export default __webpack_public_path__ + \"static/media/powered-by-iov.a0397e40.svg\";","export default __webpack_public_path__ + \"static/media/powered-by-iov-gray.e25db553.svg\";","import React from 'react'\nimport powered from '../../assets/images/powered-by-iov.svg'\nimport poweredGray from '../../assets/images/powered-by-iov-gray.svg'\n\ninterface RifFooterInterface {\n  isLoggedIn: boolean\n  version: string\n}\n\nconst RifFooter: React.FC<RifFooterInterface> = ({ isLoggedIn, version }) => (\n  <footer className=\"app-footer\">\n    <img src={isLoggedIn ? poweredGray : powered} alt=\"Powered By IOV\" />\n    <p>Copyright &copy; 2020 IOV Labs. All rights reserved.</p>\n    <p>Version {version}</p>\n  </footer>\n)\n\nexport default RifFooter\n","import React, { useContext } from 'react'\nimport '../assets/scss/_index.scss'\nimport { version } from '../../package.json'\nimport LoginScreenContainer from './Login/LoginScreenContainer'\nimport DashboardContainer from './Dashboard/DashboardContainer'\nimport RifFooter from '../components/RifFooter/RifFooter'\nimport { Web3ProviderContext } from '../providerContext'\n\nconst App = () => {\n  const context = useContext(Web3ProviderContext)\n  const isLoggedIn = context?.provider\n\n  return (\n    <div className={isLoggedIn ? 'app loggedin' : 'app login'}>\n      {isLoggedIn\n        ? <DashboardContainer />\n        : <LoginScreenContainer context={context} />\n      }\n      <RifFooter isLoggedIn={isLoggedIn} version={version} />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport identityReducer, { IdentityState } from './reducers/identity'\nimport ethrdidReducer, { EtherdidState } from './reducers/ethrdid'\nimport tokenReducer, { TokenState } from './reducers/tokens'\n\nconst middleware = [thunk, createLogger()]\n\nexport interface stateInterface {\n  identity: IdentityState,\n  ethrdid: EtherdidState,\n  tokens: TokenState\n}\n\nconst rootReducer = combineReducers({\n  identity: identityReducer,\n  ethrdid: ethrdidReducer,\n  tokens: tokenReducer\n})\n\nconst configureStore = (prelodedState?: any) =>\n  createStore(rootReducer, prelodedState, applyMiddleware(...middleware))\n\nexport default configureStore\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/App'\nimport { Web3ProviderElement } from './providerContext'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport configureStore from './app/state/configureStore'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <Web3ProviderElement>\n        <App />\n      </Web3ProviderElement>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}